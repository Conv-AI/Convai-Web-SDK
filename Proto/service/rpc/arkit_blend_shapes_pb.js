/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.service.ARKitBlendShapes', null, global);
goog.exportSymbol('proto.service.ARKitBlendShapesData', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ARKitBlendShapesData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ARKitBlendShapesData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.service.ARKitBlendShapesData.displayName = 'proto.service.ARKitBlendShapesData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ARKitBlendShapesData.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ARKitBlendShapesData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ARKitBlendShapesData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ARKitBlendShapesData.toObject = function(includeInstance, msg) {
  var f, obj = {
    arKitBlendShapes: (f = msg.getArKitBlendShapes()) && proto.service.ARKitBlendShapes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ARKitBlendShapesData}
 */
proto.service.ARKitBlendShapesData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ARKitBlendShapesData;
  return proto.service.ARKitBlendShapesData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ARKitBlendShapesData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ARKitBlendShapesData}
 */
proto.service.ARKitBlendShapesData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.ARKitBlendShapes;
      reader.readMessage(value,proto.service.ARKitBlendShapes.deserializeBinaryFromReader);
      msg.setArKitBlendShapes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ARKitBlendShapesData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ARKitBlendShapesData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ARKitBlendShapesData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ARKitBlendShapesData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArKitBlendShapes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.service.ARKitBlendShapes.serializeBinaryToWriter
    );
  }
};


/**
 * optional ARKitBlendShapes ar_kit_blend_shapes = 1;
 * @return {?proto.service.ARKitBlendShapes}
 */
proto.service.ARKitBlendShapesData.prototype.getArKitBlendShapes = function() {
  return /** @type{?proto.service.ARKitBlendShapes} */ (
    jspb.Message.getWrapperField(this, proto.service.ARKitBlendShapes, 1));
};


/** @param {?proto.service.ARKitBlendShapes|undefined} value */
proto.service.ARKitBlendShapesData.prototype.setArKitBlendShapes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.service.ARKitBlendShapesData.prototype.clearArKitBlendShapes = function() {
  this.setArKitBlendShapes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.service.ARKitBlendShapesData.prototype.hasArKitBlendShapes = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ARKitBlendShapes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ARKitBlendShapes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.service.ARKitBlendShapes.displayName = 'proto.service.ARKitBlendShapes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ARKitBlendShapes.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ARKitBlendShapes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ARKitBlendShapes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ARKitBlendShapes.toObject = function(includeInstance, msg) {
  var f, obj = {
    browDownLeft: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    browDownRight: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    browInnerUp: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    browOuterUpLeft: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    browOuterUpRight: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    cheekPuff: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    cheekSquintLeft: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    cheekSquintRight: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    eyeBlinkLeft: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    eyeBlinkRight: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    eyeLookDownLeft: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    eyeLookDownRight: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    eyeLookInLeft: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    eyeLookInRight: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    eyeLookOutLeft: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    eyeLookOutRight: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    eyeLookUpLeft: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    eyeLookUpRight: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    eyeSquintLeft: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    eyeSquintRight: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
    eyeWideLeft: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    eyeWideRight: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    jawForward: +jspb.Message.getFieldWithDefault(msg, 23, 0.0),
    jawLeft: +jspb.Message.getFieldWithDefault(msg, 24, 0.0),
    jawOpen: +jspb.Message.getFieldWithDefault(msg, 25, 0.0),
    jawRight: +jspb.Message.getFieldWithDefault(msg, 26, 0.0),
    mouthClose: +jspb.Message.getFieldWithDefault(msg, 27, 0.0),
    mouthDimpleLeft: +jspb.Message.getFieldWithDefault(msg, 28, 0.0),
    mouthDimpleRight: +jspb.Message.getFieldWithDefault(msg, 29, 0.0),
    mouthFrownLeft: +jspb.Message.getFieldWithDefault(msg, 30, 0.0),
    mouthFrownRight: +jspb.Message.getFieldWithDefault(msg, 31, 0.0),
    mouthFunnel: +jspb.Message.getFieldWithDefault(msg, 32, 0.0),
    mouthLeft: +jspb.Message.getFieldWithDefault(msg, 33, 0.0),
    mouthLowerDownLeft: +jspb.Message.getFieldWithDefault(msg, 34, 0.0),
    mouthLowerDownRight: +jspb.Message.getFieldWithDefault(msg, 35, 0.0),
    mouthPressLeft: +jspb.Message.getFieldWithDefault(msg, 36, 0.0),
    mouthPressRight: +jspb.Message.getFieldWithDefault(msg, 37, 0.0),
    mouthPucker: +jspb.Message.getFieldWithDefault(msg, 38, 0.0),
    mouthRight: +jspb.Message.getFieldWithDefault(msg, 39, 0.0),
    mouthRollLower: +jspb.Message.getFieldWithDefault(msg, 40, 0.0),
    mouthRollUpper: +jspb.Message.getFieldWithDefault(msg, 41, 0.0),
    mouthShrugLower: +jspb.Message.getFieldWithDefault(msg, 42, 0.0),
    mouthShrugUpper: +jspb.Message.getFieldWithDefault(msg, 43, 0.0),
    mouthSmileLeft: +jspb.Message.getFieldWithDefault(msg, 44, 0.0),
    mouthSmileRight: +jspb.Message.getFieldWithDefault(msg, 45, 0.0),
    mouthStretchLeft: +jspb.Message.getFieldWithDefault(msg, 46, 0.0),
    mouthStretchRight: +jspb.Message.getFieldWithDefault(msg, 47, 0.0),
    mouthUpperUpLeft: +jspb.Message.getFieldWithDefault(msg, 48, 0.0),
    mouthUpperUpRight: +jspb.Message.getFieldWithDefault(msg, 49, 0.0),
    noseSneerLeft: +jspb.Message.getFieldWithDefault(msg, 50, 0.0),
    noseSneerRight: +jspb.Message.getFieldWithDefault(msg, 51, 0.0),
    tongueOut: +jspb.Message.getFieldWithDefault(msg, 52, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ARKitBlendShapes}
 */
proto.service.ARKitBlendShapes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ARKitBlendShapes;
  return proto.service.ARKitBlendShapes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ARKitBlendShapes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ARKitBlendShapes}
 */
proto.service.ARKitBlendShapes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrowDownLeft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrowDownRight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrowInnerUp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrowOuterUpLeft(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrowOuterUpRight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCheekPuff(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCheekSquintLeft(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCheekSquintRight(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeBlinkLeft(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeBlinkRight(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookDownLeft(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookDownRight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookInLeft(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookInRight(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookOutLeft(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookOutRight(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookUpLeft(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeLookUpRight(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeSquintLeft(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeSquintRight(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeWideLeft(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEyeWideRight(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJawForward(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJawLeft(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJawOpen(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJawRight(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthClose(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthDimpleLeft(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthDimpleRight(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthFrownLeft(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthFrownRight(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthFunnel(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthLeft(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthLowerDownLeft(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthLowerDownRight(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthPressLeft(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthPressRight(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthPucker(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthRight(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthRollLower(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthRollUpper(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthShrugLower(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthShrugUpper(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthSmileLeft(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthSmileRight(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthStretchLeft(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthStretchRight(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthUpperUpLeft(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMouthUpperUpRight(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNoseSneerLeft(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNoseSneerRight(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTongueOut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ARKitBlendShapes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ARKitBlendShapes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ARKitBlendShapes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ARKitBlendShapes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrowDownLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getBrowDownRight();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getBrowInnerUp();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getBrowOuterUpLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getBrowOuterUpRight();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getCheekPuff();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getCheekSquintLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getCheekSquintRight();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getEyeBlinkLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getEyeBlinkRight();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getEyeLookDownLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getEyeLookDownRight();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getEyeLookInLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getEyeLookInRight();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getEyeLookOutLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getEyeLookOutRight();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getEyeLookUpLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEyeLookUpRight();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getEyeSquintLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = message.getEyeSquintRight();
  if (f !== 0.0) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = message.getEyeWideLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getEyeWideRight();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getJawForward();
  if (f !== 0.0) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = message.getJawLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      24,
      f
    );
  }
  f = message.getJawOpen();
  if (f !== 0.0) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = message.getJawRight();
  if (f !== 0.0) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = message.getMouthClose();
  if (f !== 0.0) {
    writer.writeFloat(
      27,
      f
    );
  }
  f = message.getMouthDimpleLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      28,
      f
    );
  }
  f = message.getMouthDimpleRight();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getMouthFrownLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      30,
      f
    );
  }
  f = message.getMouthFrownRight();
  if (f !== 0.0) {
    writer.writeFloat(
      31,
      f
    );
  }
  f = message.getMouthFunnel();
  if (f !== 0.0) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = message.getMouthLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      33,
      f
    );
  }
  f = message.getMouthLowerDownLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      34,
      f
    );
  }
  f = message.getMouthLowerDownRight();
  if (f !== 0.0) {
    writer.writeFloat(
      35,
      f
    );
  }
  f = message.getMouthPressLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      36,
      f
    );
  }
  f = message.getMouthPressRight();
  if (f !== 0.0) {
    writer.writeFloat(
      37,
      f
    );
  }
  f = message.getMouthPucker();
  if (f !== 0.0) {
    writer.writeFloat(
      38,
      f
    );
  }
  f = message.getMouthRight();
  if (f !== 0.0) {
    writer.writeFloat(
      39,
      f
    );
  }
  f = message.getMouthRollLower();
  if (f !== 0.0) {
    writer.writeFloat(
      40,
      f
    );
  }
  f = message.getMouthRollUpper();
  if (f !== 0.0) {
    writer.writeFloat(
      41,
      f
    );
  }
  f = message.getMouthShrugLower();
  if (f !== 0.0) {
    writer.writeFloat(
      42,
      f
    );
  }
  f = message.getMouthShrugUpper();
  if (f !== 0.0) {
    writer.writeFloat(
      43,
      f
    );
  }
  f = message.getMouthSmileLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      44,
      f
    );
  }
  f = message.getMouthSmileRight();
  if (f !== 0.0) {
    writer.writeFloat(
      45,
      f
    );
  }
  f = message.getMouthStretchLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      46,
      f
    );
  }
  f = message.getMouthStretchRight();
  if (f !== 0.0) {
    writer.writeFloat(
      47,
      f
    );
  }
  f = message.getMouthUpperUpLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      48,
      f
    );
  }
  f = message.getMouthUpperUpRight();
  if (f !== 0.0) {
    writer.writeFloat(
      49,
      f
    );
  }
  f = message.getNoseSneerLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      50,
      f
    );
  }
  f = message.getNoseSneerRight();
  if (f !== 0.0) {
    writer.writeFloat(
      51,
      f
    );
  }
  f = message.getTongueOut();
  if (f !== 0.0) {
    writer.writeFloat(
      52,
      f
    );
  }
};


/**
 * optional float brow_down_left = 1;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getBrowDownLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setBrowDownLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float brow_down_right = 2;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getBrowDownRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setBrowDownRight = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float brow_inner_up = 3;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getBrowInnerUp = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setBrowInnerUp = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float brow_outer_up_left = 4;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getBrowOuterUpLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setBrowOuterUpLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float brow_outer_up_right = 5;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getBrowOuterUpRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setBrowOuterUpRight = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float cheek_puff = 6;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getCheekPuff = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setCheekPuff = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float cheek_squint_left = 7;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getCheekSquintLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setCheekSquintLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float cheek_squint_right = 8;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getCheekSquintRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setCheekSquintRight = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float eye_blink_left = 9;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeBlinkLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeBlinkLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float eye_blink_right = 10;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeBlinkRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeBlinkRight = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float eye_look_down_left = 11;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookDownLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookDownLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float eye_look_down_right = 12;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookDownRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookDownRight = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float eye_look_in_left = 13;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookInLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookInLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float eye_look_in_right = 14;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookInRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookInRight = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float eye_look_out_left = 15;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookOutLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookOutLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float eye_look_out_right = 16;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookOutRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookOutRight = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float eye_look_up_left = 17;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookUpLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookUpLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float eye_look_up_right = 18;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeLookUpRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeLookUpRight = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float eye_squint_left = 19;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeSquintLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeSquintLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional float eye_squint_right = 20;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeSquintRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeSquintRight = function(value) {
  jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float eye_wide_left = 21;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeWideLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeWideLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float eye_wide_right = 22;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getEyeWideRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setEyeWideRight = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional float jaw_forward = 23;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getJawForward = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setJawForward = function(value) {
  jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional float jaw_left = 24;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getJawLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setJawLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional float jaw_open = 25;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getJawOpen = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setJawOpen = function(value) {
  jspb.Message.setProto3FloatField(this, 25, value);
};


/**
 * optional float jaw_right = 26;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getJawRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 26, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setJawRight = function(value) {
  jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * optional float mouth_close = 27;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthClose = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthClose = function(value) {
  jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * optional float mouth_dimple_left = 28;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthDimpleLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 28, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthDimpleLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 28, value);
};


/**
 * optional float mouth_dimple_right = 29;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthDimpleRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 29, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthDimpleRight = function(value) {
  jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional float mouth_frown_left = 30;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthFrownLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 30, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthFrownLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 30, value);
};


/**
 * optional float mouth_frown_right = 31;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthFrownRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 31, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthFrownRight = function(value) {
  jspb.Message.setProto3FloatField(this, 31, value);
};


/**
 * optional float mouth_funnel = 32;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthFunnel = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthFunnel = function(value) {
  jspb.Message.setProto3FloatField(this, 32, value);
};


/**
 * optional float mouth_left = 33;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 33, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 33, value);
};


/**
 * optional float mouth_lower_down_left = 34;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthLowerDownLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 34, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthLowerDownLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 34, value);
};


/**
 * optional float mouth_lower_down_right = 35;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthLowerDownRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 35, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthLowerDownRight = function(value) {
  jspb.Message.setProto3FloatField(this, 35, value);
};


/**
 * optional float mouth_press_left = 36;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthPressLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 36, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthPressLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 36, value);
};


/**
 * optional float mouth_press_right = 37;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthPressRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 37, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthPressRight = function(value) {
  jspb.Message.setProto3FloatField(this, 37, value);
};


/**
 * optional float mouth_pucker = 38;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthPucker = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 38, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthPucker = function(value) {
  jspb.Message.setProto3FloatField(this, 38, value);
};


/**
 * optional float mouth_right = 39;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 39, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthRight = function(value) {
  jspb.Message.setProto3FloatField(this, 39, value);
};


/**
 * optional float mouth_roll_lower = 40;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthRollLower = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 40, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthRollLower = function(value) {
  jspb.Message.setProto3FloatField(this, 40, value);
};


/**
 * optional float mouth_roll_upper = 41;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthRollUpper = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 41, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthRollUpper = function(value) {
  jspb.Message.setProto3FloatField(this, 41, value);
};


/**
 * optional float mouth_shrug_lower = 42;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthShrugLower = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 42, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthShrugLower = function(value) {
  jspb.Message.setProto3FloatField(this, 42, value);
};


/**
 * optional float mouth_shrug_upper = 43;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthShrugUpper = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 43, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthShrugUpper = function(value) {
  jspb.Message.setProto3FloatField(this, 43, value);
};


/**
 * optional float mouth_smile_left = 44;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthSmileLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 44, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthSmileLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 44, value);
};


/**
 * optional float mouth_smile_right = 45;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthSmileRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 45, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthSmileRight = function(value) {
  jspb.Message.setProto3FloatField(this, 45, value);
};


/**
 * optional float mouth_stretch_left = 46;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthStretchLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 46, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthStretchLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 46, value);
};


/**
 * optional float mouth_stretch_right = 47;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthStretchRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 47, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthStretchRight = function(value) {
  jspb.Message.setProto3FloatField(this, 47, value);
};


/**
 * optional float mouth_upper_up_left = 48;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthUpperUpLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 48, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthUpperUpLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 48, value);
};


/**
 * optional float mouth_upper_up_right = 49;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getMouthUpperUpRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 49, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setMouthUpperUpRight = function(value) {
  jspb.Message.setProto3FloatField(this, 49, value);
};


/**
 * optional float nose_sneer_left = 50;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getNoseSneerLeft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 50, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setNoseSneerLeft = function(value) {
  jspb.Message.setProto3FloatField(this, 50, value);
};


/**
 * optional float nose_sneer_right = 51;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getNoseSneerRight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 51, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setNoseSneerRight = function(value) {
  jspb.Message.setProto3FloatField(this, 51, value);
};


/**
 * optional float tongue_out = 52;
 * @return {number}
 */
proto.service.ARKitBlendShapes.prototype.getTongueOut = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 52, 0.0));
};


/** @param {number} value */
proto.service.ARKitBlendShapes.prototype.setTongueOut = function(value) {
  jspb.Message.setProto3FloatField(this, 52, value);
};


goog.object.extend(exports, proto.service);
